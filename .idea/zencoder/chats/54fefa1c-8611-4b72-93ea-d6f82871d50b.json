{
    "checksum": "80e03fce14269671e46c000e62981b6202dfcff1fc98b973623382a9db0c463e",
    "data": {
    "id": "54fefa1c-8611-4b72-93ea-d6f82871d50b",
    "createdAt": 1755899774605,
    "updatedAt": 1755899774652,
    "title": "s",
    "messages": [
        {
            "id": "0637221d-3f77-4433-8c6a-b18efe5c6737",
            "role": "user",
            "content": [
                {
                    "type": "text",
                    "text": "s"
                }
            ],
            "context": {
                "currentFile": {
                    "path": "frontend/src/lib/axios.js",
                    "fsPath": "/home/ali/chatapp/frontend/src/lib/axios.js",
                    "sources": [
                        "opened_tab"
                    ],
                    "content": "import axios  from \"axios\";\nimport { useAuthStore } from '../store/useAuthStore'\nimport { useChatStore } from '../store/useChatStore'\nexport const axiosInstance = axios.create({baseURL:'http://localhost:5001/api',withCredentials:true})\n\naxiosInstance.interceptors.response.use(\n    (response) => response,\n    async (error) => {\n        const status = error?.response?.status\n        if (status === 401 || status === 403) {\n            // Clear client state so UI reacts immediately\n            useAuthStore.setState({ authUser: null })\n            useChatStore.setState({\n                messages: [],\n                users: [],\n                selectedUser: null,\n                isgettingUsers: false,\n                isgettingUserMessages: false,\n            })\n        }\n        return Promise.reject(error)\n    }\n)",
                    "language": "ecmascript 6"
                },
                "codebaseEnabled": true
            },
            "createdAt": 1755899774649,
            "isInternal": false,
            "rawContent": {
                "type": "doc",
                "content": [
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "s"
                            }
                        ]
                    }
                ]
            },
            "autoAppliedRules": []
        }
    ],
    "isAgent": true,
    "isCustomAgent": false,
    "isUnitTestsAgent": false,
    "isE2EAgent": false,
    "isQnaAgent": false,
    "isRepoInfoAgent": false,
    "isClaudeCode": false,
    "isZencoderCli": false,
    "autoApply": false,
    "model": "default"
}
}